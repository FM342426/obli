@page "/auditoria"
@attribute [Authorize(Roles = "Administrador")]  

@using Microsoft.AspNetCore.Authorization
@using NearDupFinder.Dominio.Entidades 
@using NearDupFinder.Dominio.Interfaces
@inject IAuditoriaService AuditoriaService

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <h3 class="mb-0">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Registro de Auditoría
            </h3>
        </div>
        <div class="card-body">
            @if (logs == null)
            {
                <div class="d-flex justify-content-center align-items-center my-5">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                    <strong class="ms-3">Cargando registros...</strong>
                </div>
            }
            else if (!logs.Any())
            {
                <div class="alert alert-info text-center" role="alert">
                    No se han encontrado registros en la auditoría.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="thead-dark">
                            <tr>
                                <th>Fecha y Hora</th>
                                <th>Usuario</th>
                                <th>Acción</th>
                                <th>Detalles</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var log in logs)
                            {
                                <tr>
                                    <td class="text-nowrap">@log.Timestamp.ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss")</td>
                                    <td>@log.Usuario</td>
                                    <td>@log.Accion</td>
                                    <td>@log.Detalles</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<AuditoriaEntry> logs;

    protected override async Task OnInitializedAsync()
    {
        var rawLogs = await AuditoriaService.GetLogs();
        logs = rawLogs.OrderByDescending(l => l.Timestamp).ToList();
    }
}